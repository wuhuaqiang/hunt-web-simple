<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hunt.dao.SysLoginrecordsMapper">
    <resultMap id="BaseResultMap" type="com.hunt.model.entity.SysLoginrecords">
        <result column="id" property="id" jdbcType="DECIMAL"/>
        <result column="lastLoginIp" property="lastloginip" jdbcType="VARCHAR"/>
        <result column="loginCount" property="logincount" jdbcType="DECIMAL"/>
        <result column="lastLoginTime" property="lastlogintime" jdbcType="TIMESTAMP"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="addTime" property="addtime" jdbcType="TIMESTAMP"/>
        <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP"/>
        <result column="loginIp" property="loginip" jdbcType="VARCHAR"/>
        <result column="loginTime" property="logintime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, lastLoginIp, loginCount, lastLoginTime, account, addTime, updateTime, loginIp,
    loginTime
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hunt.model.entity.SysLoginrecordsParams">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from SYS_LOGINRECORDS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByAccountName" resultMap="BaseResultMap" parameterType="string">
        select *
        from SYS_LOGINRECORDS
        where account = #{account}
    </select>
    <delete id="deleteByExample" parameterType="com.hunt.model.entity.SysLoginrecordsParams">
        delete from SYS_LOGINRECORDS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.hunt.model.entity.SysLoginrecords">
    insert into SYS_LOGINRECORDS (id, lastLoginIp, loginCount,
      lastLoginTime, account, addTime,
      updateTime, loginIp, loginTime
      )
    values (idauto.nextval, #{lastloginip,jdbcType=VARCHAR}, #{logincount,jdbcType=DECIMAL},
      #{lastlogintime,jdbcType=TIMESTAMP}, #{account,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{loginip,jdbcType=VARCHAR}, #{logintime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.hunt.model.entity.SysLoginrecords">
        insert into SYS_LOGINRECORDS
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="lastloginip != null">
                lastLoginIp,
            </if>
            <if test="logincount != null">
                loginCount,
            </if>
            <if test="lastlogintime != null">
                lastLoginTime,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="addtime != null">
                addTime,
            </if>
            <if test="updatetime != null">
                updateTime,
            </if>
            <if test="loginip != null">
                loginIp,
            </if>
            <if test="logintime != null">
                loginTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=DECIMAL},
            </if>
            <if test="lastloginip != null">
                #{lastloginip,jdbcType=VARCHAR},
            </if>
            <if test="logincount != null">
                #{logincount,jdbcType=DECIMAL},
            </if>
            <if test="lastlogintime != null">
                #{lastlogintime,jdbcType=TIMESTAMP},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="addtime != null">
                #{addtime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatetime != null">
                #{updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="loginip != null">
                #{loginip,jdbcType=VARCHAR},
            </if>
            <if test="logintime != null">
                #{logintime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.hunt.model.entity.SysLoginrecordsParams"
            resultType="java.lang.Integer">
        select count(*) from SYS_LOGINRECORDS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update SYS_LOGINRECORDS
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=DECIMAL},
            </if>
            <if test="record.lastloginip != null">
                lastLoginIp = #{record.lastloginip,jdbcType=VARCHAR},
            </if>
            <if test="record.logincount != null">
                loginCount = #{record.logincount,jdbcType=DECIMAL},
            </if>
            <if test="record.lastlogintime != null">
                lastLoginTime = #{record.lastlogintime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.account != null">
                account = #{record.account,jdbcType=VARCHAR},
            </if>
            <if test="record.addtime != null">
                addTime = #{record.addtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatetime != null">
                updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.loginip != null">
                loginIp = #{record.loginip,jdbcType=VARCHAR},
            </if>
            <if test="record.logintime != null">
                loginTime = #{record.logintime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update SYS_LOGINRECORDS
        set id = #{record.id,jdbcType=DECIMAL},
        lastLoginIp = #{record.lastloginip,jdbcType=VARCHAR},
        loginCount = #{record.logincount,jdbcType=DECIMAL},
        lastLoginTime = #{record.lastlogintime,jdbcType=TIMESTAMP},
        account = #{record.account,jdbcType=VARCHAR},
        addTime = #{record.addtime,jdbcType=TIMESTAMP},
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
        loginIp = #{record.loginip,jdbcType=VARCHAR},
        loginTime = #{record.logintime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>