<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hunt.dao.SysLoginlogMapper" >
  <resultMap id="BaseResultMap" type="com.hunt.model.entity.SysLoginlog" >
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="id" property="id" jdbcType="DECIMAL" />
    <result column="addTime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="loginIp" property="loginip" jdbcType="VARCHAR" />
    <result column="loginTime" property="logintime" jdbcType="TIMESTAMP" />
    <result column="isSuccess" property="issuccess" jdbcType="CHAR" />
    <result column="errorMsg" property="errormsg" jdbcType="VARCHAR" />
    <result column="logType" property="logtype" jdbcType="VARCHAR" />
    <result column="create_name" property="createName" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    account, id, addTime, updateTime, loginIp, loginTime, isSuccess, errorMsg, logType
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hunt.model.entity.SysLoginlogParams" >
    select
    <if test="distinct" >
      distinct
    </if>
      LG.*
      ï¼Œ(SELECT US.ZH_NAME FROM SYS_USER US WHERE US.LOGIN_NAME  = LG.ACCOUNT and US.status = 1 ) create_name
    FROM SYS_LOGINLOG LG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hunt.model.entity.SysLoginlogParams" >
    delete from SYS_LOGINLOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hunt.model.entity.SysLoginlog" >
    insert into SYS_LOGINLOG (account, id, addTime,
      updateTime, loginIp, loginTime,
      isSuccess, errorMsg, logType
      )
    values (#{account,jdbcType=VARCHAR},idauto.nextval, #{addtime,jdbcType=TIMESTAMP},
      #{updatetime,jdbcType=TIMESTAMP}, #{loginip,jdbcType=VARCHAR}, #{logintime,jdbcType=TIMESTAMP}, 
      #{issuccess,jdbcType=CHAR}, #{errormsg,jdbcType=VARCHAR}, #{logtype,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hunt.model.entity.SysLoginlog" >
    insert into SYS_LOGINLOG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="account != null" >
        account,
      </if>
      <if test="id != null" >
        id,
      </if>
      <if test="addtime != null" >
        addTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="loginip != null" >
        loginIp,
      </if>
      <if test="logintime != null" >
        loginTime,
      </if>
      <if test="issuccess != null" >
        isSuccess,
      </if>
      <if test="errormsg != null" >
        errorMsg,
      </if>
      <if test="logtype != null" >
        logType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginip != null" >
        #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="issuccess != null" >
        #{issuccess,jdbcType=CHAR},
      </if>
      <if test="errormsg != null" >
        #{errormsg,jdbcType=VARCHAR},
      </if>
      <if test="logtype != null" >
        #{logtype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hunt.model.entity.SysLoginlogParams" resultType="java.lang.Integer" >
    select count(*) from SYS_LOGINLOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SYS_LOGINLOG
    <set >
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null" >
        id = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.addtime != null" >
        addTime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginip != null" >
        loginIp = #{record.loginip,jdbcType=VARCHAR},
      </if>
      <if test="record.logintime != null" >
        loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.issuccess != null" >
        isSuccess = #{record.issuccess,jdbcType=CHAR},
      </if>
      <if test="record.errormsg != null" >
        errorMsg = #{record.errormsg,jdbcType=VARCHAR},
      </if>
      <if test="record.logtype != null" >
        logType = #{record.logtype,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SYS_LOGINLOG
    set account = #{record.account,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=DECIMAL},
      addTime = #{record.addtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      loginIp = #{record.loginip,jdbcType=VARCHAR},
      loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      isSuccess = #{record.issuccess,jdbcType=CHAR},
      errorMsg = #{record.errormsg,jdbcType=VARCHAR},
      logType = #{record.logtype,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>